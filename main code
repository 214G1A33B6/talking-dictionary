import tkinter as tk
from tkinter import messagebox
import json
import time

class QuizApp:
    def __init__(self):
        self.q_no = 0
        self.display_title()
        self.display_question()
        self.opt_selected = tk.IntVar()
        self.opts = self.radio_buttons()
        self.display_options()
        self.buttons()
        self.data_size = len(question)
        self.correct = 0
        self.timer_seconds = 15
        self.timer_label = tk.Label(gui, text="", font=("Arial", 12))
        self.timer_label.place(x=400, y=320)
        self.result_label = tk.Label(gui, text="", font=("Arial", 14))
        self.result_label.place(x=150, y=340)
        self.timer_id = None
        self.update_timer()

    def display_result(self, is_correct=None):
        if is_correct is None:
            self.result_label.config(text="")
        elif is_correct:
            self.result_label.config(text="Correct Answer!", fg="green")
        else:
            correct_answer = options[self.q_no][answer[self.q_no] - 1]
            self.result_label.config(text=f"Incorrect Answer! Correct Answer: {correct_answer}", fg="red")

    def check_answer(self):
        if 0 <= self.q_no < self.data_size and self.opt_selected.get() == answer[self.q_no]:
            self.correct += 1

    def submit_answer(self):
        self.check_answer()
        is_correct = (self.opt_selected.get() == answer[self.q_no])
        self.display_result(is_correct)

    def next_btn(self):
        self.q_no += 1
        if 0 <= self.q_no < self.data_size:
            self.timer_seconds = 15
            self.result_label.config(text="")
            self.display_question()
            self.display_options()
            self.update_timer()
        elif self.q_no == self.data_size:
            self.display_result()
            self.display_final_score()
            gui.after(3000, gui.destroy)  # Close the GUI after showing the final result

    def buttons(self):
        next_button = tk.Button(gui, text="Next", command=self.next_btn,
                                width=10, bg="blue", fg="white", font=("Arial", 16, "bold"))
        next_button.place(x=350, y=380)

        submit_button = tk.Button(gui, text="Submit Answer", command=self.submit_answer,
                                  width=15, bg="purple", fg="white", font=("Arial", 14, "bold"))
        submit_button.place(x=150, y=380)

        quit_button = tk.Button(gui, text="Quit", command=gui.destroy,
                                width=5, bg="red", fg="white", font=("Arial", 16, " bold"))
        quit_button.place(x=700, y=50)

    def display_options(self):
        val = 0
        self.opt_selected.set(0)
        for option in options[self.q_no]:
            self.opts[val]['text'] = option
            val += 1

    def display_question(self):
        q_no_label = tk.Label(gui, text=question[self.q_no], width=60,
                              font=('Arial', 16, 'bold'), anchor='w')
        q_no_label.place(x=70, y=100)

    def display_title(self):
        title = tk.Label(gui, text="QUIZ GAME",
                         width=50, bg="green", fg="white", font=("Arial", 20, "bold"))
        title.place(x=0, y=2)

    def radio_buttons(self):
        q_list = []
        y_pos = 150
        while len(q_list) < 4:
            radio_btn = tk.Radiobutton(gui, text=" ", variable=self.opt_selected,
                                       value=len(q_list) + 1, font=("Arial", 14))
            q_list.append(radio_btn)
            radio_btn.place(x=100, y=y_pos)
            y_pos += 40
        return q_list

    def display_final_score(self):
        final_score = f"Final Score: {self.correct}/{self.data_size}"
        self.result_label.config(text=final_score, fg="blue")

    def update_timer(self):
        if self.timer_seconds > 0:
            self.timer_label.config(text=f"Time left: {self.timer_seconds} seconds")
            self.timer_id = gui.after(1000, self.update_timer)
            self.timer_seconds -= 1
        else:
            self.timer_id = None
            self.next_btn()

# Create a GUI Window
gui = tk.Tk()
gui.geometry("800x450")
gui.title("Quiz")

# Define the questions, options, and answers
question = ["Q1. What Indian city is the capital of two states?",
            "Q2. Which city is the capital of India?",
            "Q3. Smallest State of India?",
            "Q4. Where is Taj Mahal Located?"]

options = [["Chandigarh", "Kolkata", "Delhi", "Bangalore"],
           ["Jaipur", "Delhi", "Chennai", "Mumbai"],
           ["Rajasthan", "Punjab", "Goa", "Bihar"],
           ["Lucknow", "Agra", "Bhopal", "Delhi"]]

answer = [1, 2, 3, 2]

# Create an object of the QuizApp class
quiz = QuizApp()

# Start the GUI
gui.mainloop()

